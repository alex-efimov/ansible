---
### System-wide
- name: yum install
  become: yes
  become_user: root
  when: ansible_os_family == "RedHat"
  yum: name={{ item }} state=installed
  with_items:
    - mc
    - screen
    - tmux
  tags:
    - system
- name: apt install
  become: yes
  become_user: root
  apt: name={{ item }} state=installed
  when: ansible_os_family == "Debian"
  with_items:
    - mc
    - screen
    - tmux
  tags:
    - system

- name: enable key-based ssh auth
  become: yes
  become_user: root
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^\#PasswordAuthentication
    line: PasswordAuthentication yes
  notify:
    restart ssh
  tags:
    - system

# Bashrc
- name: bashrc
  copy:
    src: "{{ role_path }}/files/bashrc.sh"
    dest: "{{ ansible_user_dir }}/.bashrc"
    force: yes

# SSH config
- name: ssh auth key
  authorized_key:
    user: aefimov
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
- name: ssh-rc
  copy:
    src: "{{ role_path }}/files/ssh.rc.sh"
    dest: "{{ ansible_user_dir }}/.ssh/rc"
    force: yes
    mode: 0700

# MC config
- name: mc config directory
  file:
    path: "{{ ansible_user_dir }}/.config/mc"
    state: directory
    mode: 0755
- name: configure midnight commander
  copy:
    src: "{{ role_path }}/files/mc.ini"
    dest: "{{ ansible_user_dir }}/.config/mc/ini"
    force: yes

# Screen
- name: screenrc
  copy:
    src: "{{ role_path }}/files/screenrc"
    dest: "{{ ansible_user_dir }}/.screenrc"
    force: yes

# vim
- name: vimrc
  copy:
    src: "{{ role_path }}/files/vimrc"
    dest: "{{ ansible_user_dir }}/.vimrc"
    force: yes